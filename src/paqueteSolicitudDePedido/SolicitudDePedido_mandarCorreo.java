/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paqueteSolicitudDePedido;
    
import Historial.NavigationManager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Point;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Multipart;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMultipart;
import javax.swing.*;
import java.awt.event.*;
import java.io.File;
import java.text.DecimalFormat;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;
import java.util.List;
import paqueteCosteoRapido.CosteoFinal;
import paqueteCosteoRapido.CosteoForm_Ingresar;
import paqueteInicioSesion.AdministradorUsuario;
import productosFavoritos.FavoritosManager;
import productosFavoritos.ProductoFavorito;

/**
 *
 * @author andre
 */
public class SolicitudDePedido_mandarCorreo extends javax.swing.JFrame {
    
    private String nombreProducto;
    private double costoFobUSD;
    private double costoUSD;
    private double costoQuetzales;
    private double precioVenta;
    private double precioConIVA;
    private double margen;
    private String currentUser;
    private AdministradorUsuario adminUsuario;

    /**
     * Creates new form SolicitudDePedido_mandarCorreo
     */
   public SolicitudDePedido_mandarCorreo(String username) {
    this.currentUser = username;
    this.adminUsuario = new AdministradorUsuario();
    initComponents();
    NavigationManager.getInstance().pushFrame(this);
    cargarEmailUsuario();
    
}
   
   private void cargarEmailUsuario() {
        try {
            // Obtener la lista de usuarios
            List<String[]> usuarios = adminUsuario.listarUsuarios();
            
            // Buscar el email del usuario actual
            for (String[] usuario : usuarios) {
                if (usuario[0].equals(currentUser)) {
                    // usuario[1] contiene el email seg√∫n la estructura del Excel
                    recibirCorreo.setText(usuario[1]);
                    break;
                }
            }
            
            // Hacer el campo editable para permitir cambios
            recibirCorreo.setEditable(true);
        } catch (Exception e) {
            System.err.println("Error al cargar el email del usuario: " + e.getMessage());
            // En caso de error, dejar el campo editable y vac√≠o
            recibirCorreo.setEditable(true);
            recibirCorreo.setText("");
        }
    }
   
  




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        flechaIzquierda = new javax.swing.JButton();
        recargar = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        favoritos = new javax.swing.JButton();
        flechaDerecha = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nombreDescripcionProductoFINAL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        costoFOBUSD$_FINAL = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CostoUSD$_FINAL = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        costoQuetzales_FINAL = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        PrecioVenta_FINAL = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ConIVA_FINAL = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        margen_FINAL = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        recibirCorreo = new javax.swing.JTextField();
        guardar_al_historial = new javax.swing.JButton();
        enviarCorreo = new javax.swing.JButton();
        menuButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(178, 171, 171));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(178, 171, 171));

        flechaIzquierda.setText("‚Üê");
        flechaIzquierda.setToolTipText("");
        flechaIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flechaIzquierdaActionPerformed(evt);
            }
        });

        recargar.setText("üîÑ");
        recargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recargarActionPerformed(evt);
            }
        });

        menuButton.setText("‚ò∞");
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });

        favoritos.setText("‚ù§");
        favoritos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoritosActionPerformed(evt);
            }
        });

        flechaDerecha.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        flechaDerecha.setText("‚Üí");
        flechaDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flechaDerechaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 144, 47));
        jLabel1.setText("Solicitud de Pedido");

        nombreDescripcionProductoFINAL.setEditable(false);
        nombreDescripcionProductoFINAL.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        nombreDescripcionProductoFINAL.setText("Nombre o descripci√≥n del producto");
        nombreDescripcionProductoFINAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreDescripcionProductoFINALActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabel2.setText("Producto costeado");

        jLabel3.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel3.setText("Costo FOB USD$");

        costoFOBUSD$_FINAL.setEditable(false);
        costoFOBUSD$_FINAL.setBackground(new java.awt.Color(178, 171, 171));

        jLabel4.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel4.setText("Costo USD$");

        CostoUSD$_FINAL.setEditable(false);
        CostoUSD$_FINAL.setBackground(new java.awt.Color(178, 171, 171));

        jLabel5.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel5.setText("Costo en Quetzales");

        costoQuetzales_FINAL.setEditable(false);
        costoQuetzales_FINAL.setBackground(new java.awt.Color(178, 171, 171));
        costoQuetzales_FINAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costoQuetzales_FINALActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel7.setText("Precio de Venta");

        PrecioVenta_FINAL.setEditable(false);
        PrecioVenta_FINAL.setBackground(new java.awt.Color(178, 171, 171));

        jLabel8.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel8.setText("Con IVA");

        ConIVA_FINAL.setEditable(false);
        ConIVA_FINAL.setBackground(new java.awt.Color(178, 171, 171));
        ConIVA_FINAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConIVA_FINALActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel9.setText("Margen");

        margen_FINAL.setEditable(false);
        margen_FINAL.setBackground(new java.awt.Color(178, 171, 171));

        jLabel6.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel6.setText("Enviar a:");

        recibirCorreo.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        recibirCorreo.setText("ejemplo@gmail.com");
        recibirCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recibirCorreoActionPerformed(evt);
            }
        });

        guardar_al_historial.setFont(new java.awt.Font("Segoe UI Variable", 3, 12)); // NOI18N
        guardar_al_historial.setText("Guardar");
        guardar_al_historial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_al_historialActionPerformed(evt);
            }
        });

        enviarCorreo.setFont(new java.awt.Font("Segoe UI Variable", 3, 12)); // NOI18N
        enviarCorreo.setText("Enviar");
        enviarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarCorreoActionPerformed(evt);
            }
        });

        menuButton1.setText("‚ò∞");
        menuButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(guardar_al_historial, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(enviarCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PrecioVenta_FINAL)
                                    .addComponent(costoQuetzales_FINAL)
                                    .addComponent(CostoUSD$_FINAL)
                                    .addComponent(costoFOBUSD$_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(recibirCorreo))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(61, 61, 61)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(margen_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ConIVA_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(nombreDescripcionProductoFINAL, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(flechaIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(flechaDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(recargar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)
                        .addComponent(favoritos, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(menuButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(474, 474, 474)
                        .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(favoritos)
                    .addComponent(menuButton)
                    .addComponent(flechaIzquierda)
                    .addComponent(flechaDerecha)
                    .addComponent(recargar)
                    .addComponent(menuButton1))
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(nombreDescripcionProductoFINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(costoFOBUSD$_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CostoUSD$_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costoQuetzales_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(PrecioVenta_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ConIVA_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(margen_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(recibirCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enviarCorreo)
                    .addComponent(guardar_al_historial))
                .addGap(90, 90, 90))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 448, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void setDatos(String nombre, double costoFob, double costoUSD, double costoQuetzales, double precioVenta, double precioConIVA, double margen) {
        this.nombreProducto = nombre;
        this.costoFobUSD = costoFob;
        this.costoUSD = costoUSD;
        this.costoQuetzales = costoQuetzales;
        this.precioVenta = precioVenta;
        this.precioConIVA = precioConIVA;
        this.margen = margen;

        actualizarCampos();
    }

    private void actualizarCampos() {
       DecimalFormat df = new DecimalFormat("#,##0.00");
        
        nombreDescripcionProductoFINAL.setText(nombreProducto);
        costoFOBUSD$_FINAL.setText("$" + df.format(costoFobUSD));
        CostoUSD$_FINAL.setText("$" + df.format(costoUSD));
        costoQuetzales_FINAL.setText("Q" + df.format(costoQuetzales));
        PrecioVenta_FINAL.setText("Q" + df.format(precioVenta));
        ConIVA_FINAL.setText("Q" + df.format(precioConIVA));
        margen_FINAL.setText(df.format(margen * 100) + "%");
    }
    
    
private void enviarCorreo(String destinatario) {
    Properties props = new Properties();
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.host", "smtp.gmail.com");
    props.put("mail.smtp.port", "587");
    props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
    props.put("mail.debug", "true");
    props.put("javax.net.debug", "ssl,handshake");
    
    final String username = "stylematezelda@gmail.com"; 
    final String password = "ucom vaej vocj tdvc"; 
    
    Session session = Session.getInstance(props,
        new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });
        
    try {
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(username));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(destinatario));
        message.setSubject("Costeo R√°pido Generado");
        
        // Crear el contenedor multipart
        Multipart multipart = new MimeMultipart();
        
        // Primera parte - el texto con HTML
        BodyPart messageBodyPart = new MimeBodyPart();
        String contenido = "<html><body>" +
                        "<h2><strong>Detalles de su solicitud de pedido:</h2>" +
                        "<p><strong>Producto:</strong> " + nombreProducto + "</p>" +
                        "<p><strong>Costo FOB USD:</strong> " + costoFOBUSD$_FINAL.getText() + "</p>" +
                        "<p><strong>Costo USD:</strong> " + CostoUSD$_FINAL.getText() + "</p>" +
                        "<p><strong>Costo en Quetzales:</strong> " + costoQuetzales_FINAL.getText() + "</p>" +
                        "<p><strong>Precio de Venta:</strong> " + PrecioVenta_FINAL.getText() + "</p>" +
                        "<p><strong>Precio con IVA:</strong> " + ConIVA_FINAL.getText() + "</p>" +
                        "<p><strong>Margen:</strong> " + margen_FINAL.getText() + "</p>" +
                        "<img src='cid:imagen'>" +
                        "</body></html>";
        messageBodyPart.setContent(contenido, "text/html");
        multipart.addBodyPart(messageBodyPart);
        
        // Segunda parte - la imagen embebida
        messageBodyPart = new MimeBodyPart();
        // Corregir el path de la imagen
        String rutaImagen = "src\\Imagenes\\Gray Modern Digital Marketing Linkedln Article Cover Image (1).png";
        
        // Verificar si el archivo existe antes de intentar adjuntarlo
        File imageFile = new File(rutaImagen);
        if (!imageFile.exists()) {
            throw new MessagingException("La imagen no se encuentra en la ruta especificada: " + rutaImagen);
        }
        
        DataSource source = new FileDataSource(imageFile);
        messageBodyPart.setDataHandler(new DataHandler(source));
        messageBodyPart.setHeader("Content-ID", "<imagen>");
        multipart.addBodyPart(messageBodyPart);
        
        // Establecer el contenido completo del mensaje
        message.setContent(multipart);
        
        Transport.send(message);
        JOptionPane.showMessageDialog(this, "Correo enviado exitosamente", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        
    } catch (MessagingException e) {
        String errorMessage = "Error al enviar el correo: " + e.getMessage();
        JOptionPane.showMessageDialog(this, errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}
    

    
    
    
    private void nombreDescripcionProductoFINALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreDescripcionProductoFINALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreDescripcionProductoFINALActionPerformed

    private void ConIVA_FINALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConIVA_FINALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConIVA_FINALActionPerformed

    private void costoQuetzales_FINALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costoQuetzales_FINALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costoQuetzales_FINALActionPerformed

    private void enviarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarCorreoActionPerformed
        // TODO add your handling code here:
        
       String destinatario = recibirCorreo.getText();
        if (validarCorreo(destinatario)) {
            if (confirmarEnvio()) {
                enviarCorreo(destinatario);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una direcci√≥n de correo v√°lida.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_enviarCorreoActionPerformed

    private boolean validarCorreo(String email) {
        String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
        return email.matches(regex);
    }
    
   private boolean confirmarEnvio() {
        int opcion = JOptionPane.showConfirmDialog(this, 
            "¬øEst√° seguro que desea enviar el correo?", 
            "Confirmar env√≠o", 
            JOptionPane.YES_NO_OPTION);
        return opcion == JOptionPane.YES_OPTION;
    }
    
    
    
    private void guardar_al_historialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_al_historialActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Funcionalidad de guardar a√∫n no implementada");

    }//GEN-LAST:event_guardar_al_historialActionPerformed

    private void flechaIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flechaIzquierdaActionPerformed
        // TODO add your handling code here:
        if (NavigationManager.getInstance().canGoBack()) {
        NavigationManager.getInstance().goBack();
        this.dispose(); // Importante: liberar los recursos de la ventana actual
    } else {
        JOptionPane.showMessageDialog(this, 
            "No hay p√°ginas anteriores", 
            "Informaci√≥n",
            JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_flechaIzquierdaActionPerformed

    private void recibirCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recibirCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recibirCorreoActionPerformed

    private void menuButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButton1ActionPerformed
        // TODO add your handling code here:
       JPopupMenu popupMenu = new JPopupMenu();
   popupMenu.setBackground(Color.WHITE);
   popupMenu.setBorder(BorderFactory.createLineBorder(new Color(200, 200, 200)));

   // Crear los items del men√∫
   JMenuItem inicioItem = new JMenuItem("üè† Inicio");
JMenuItem perfilItem = new JMenuItem("üë§ Perfil");
JMenuItem costeoItem = new JMenuItem("üí∞ Costeo R√°pido");
JMenuItem productosItem = new JMenuItem("üì¶ Productos");
JMenuItem preguntasItem = new JMenuItem("‚ùì Preguntas Frecuentes");
JMenuItem historialItem = new JMenuItem("üìã Historial");
JMenuItem logoutItem = new JMenuItem("üö™ Cerrar Sesi√≥n");

   // Personalizar apariencia de los items
   Font menuFont = new Font("Segoe UI Emoji", Font.PLAIN, 14);
   Color hoverColor = new Color(240, 240, 240);
   
   for (JMenuItem item : new JMenuItem[]{inicioItem, perfilItem, costeoItem, 
       productosItem, preguntasItem, logoutItem}) {
       item.setFont(menuFont);
       item.setBackground(Color.WHITE);
       item.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
       item.setOpaque(true);
       
       // Efecto hover
       item.addMouseListener(new java.awt.event.MouseAdapter() {
           public void mouseEntered(java.awt.event.MouseEvent evt) {
               item.setBackground(hoverColor);
           }
           public void mouseExited(java.awt.event.MouseEvent evt) {
               item.setBackground(Color.WHITE);
           }
       });
   }

   // Agregar acciones a los items
   inicioItem.addActionListener(e -> {
       this.dispose();
       SwingUtilities.invokeLater(() -> {
           new GUI.GuiPrincipal(currentUser).setVisible(true);
       });
   });

   perfilItem.addActionListener(e -> {
       this.dispose();
       SwingUtilities.invokeLater(() -> {
           new perfilUsuario.PerfilUsuario(currentUser).setVisible(true);
       });
   });

   costeoItem.addActionListener(e -> {
       this.dispose();
       SwingUtilities.invokeLater(() -> {
           new paqueteCosteoRapido.CosteoForm_Ingresar(currentUser).setVisible(true);
       });
   });

   productosItem.addActionListener(e -> {
       this.dispose();
       SwingUtilities.invokeLater(() -> {
           new gestionProductos.Gui(currentUser).setVisible(true);
       });
   });

   preguntasItem.addActionListener(e -> {
       this.dispose();
       SwingUtilities.invokeLater(() -> {
           new preguntasFrecuentes.PreguntasFrecuentesForm(currentUser).setVisible(true);
       });
   });

   logoutItem.addActionListener(e -> {
       int confirm = JOptionPane.showConfirmDialog(
           this,
           "¬øEst√°s seguro de que quieres cerrar sesi√≥n?",
           "Confirmar Cierre de Sesi√≥n",
           JOptionPane.YES_NO_OPTION
       );
       
       if (confirm == JOptionPane.YES_OPTION) {
           this.dispose();
           SwingUtilities.invokeLater(() -> {
               new paqueteInicioSesion.LoginRegistroForm().setVisible(true);
           });
       }
   });

   // Agregar items al men√∫
   popupMenu.add(inicioItem);
   popupMenu.addSeparator();
   popupMenu.add(perfilItem);
   popupMenu.add(costeoItem);
   popupMenu.add(productosItem);
   popupMenu.add(preguntasItem);
   
   // Agregar gesti√≥n de usuarios solo para admin
   if ("admin".equals(currentUser)) {
       JMenuItem adminItem = new JMenuItem("\uD83D\uDC65 Gesti√≥n de Usuarios");
       adminItem.setFont(menuFont);
       adminItem.setBackground(Color.WHITE);
       adminItem.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
       adminItem.setOpaque(true);
       adminItem.addMouseListener(new java.awt.event.MouseAdapter() {
           public void mouseEntered(java.awt.event.MouseEvent evt) {
               adminItem.setBackground(hoverColor);
           }
           public void mouseExited(java.awt.event.MouseEvent evt) {
               adminItem.setBackground(Color.WHITE);
           }
       });
       adminItem.addActionListener(e -> {
           this.dispose();
           SwingUtilities.invokeLater(() -> {
               new gestionUsuarios.GestionUsuarios(currentUser).setVisible(true);
           });
       });
       popupMenu.add(adminItem);
   }
   
   popupMenu.addSeparator();
   popupMenu.addSeparator();
   popupMenu.add(logoutItem);

   // Mostrar el men√∫
   popupMenu.show(menuButton1, 0, menuButton1.getHeight());
    }//GEN-LAST:event_menuButton1ActionPerformed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuButtonActionPerformed

    private void favoritosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoritosActionPerformed
        // TODO add your handling code here:
        try {
            // Usamos el FavoritosManager que ya est√° implementado
            FavoritosManager favoritosManager = new FavoritosManager();
            List<ProductoFavorito> favoritos = favoritosManager.obtenerFavoritosUsuario(currentUser);

            if (favoritos.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                    "No tienes productos favoritos guardados",
                    "Sin Favoritos",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Crear panel principal con layout vertical
            JPanel mainPanel = new JPanel();
            mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));

            // Agregar cada producto favorito al panel
            for (ProductoFavorito favorito : favoritos) {
                JPanel productoPanel = crearPanelProductoFavorito(favorito);
                mainPanel.add(productoPanel);
                mainPanel.add(Box.createRigidArea(new Dimension(0, 10))); // Espacio entre productos
            }

            // Agregar scroll al panel
            JScrollPane scrollPane = new JScrollPane(mainPanel);
            scrollPane.setPreferredSize(new Dimension(500, 400));

            // Mostrar el di√°logo con los favoritos
            JOptionPane.showMessageDialog(this,
                scrollPane,
                "Mis Productos Favoritos",
                JOptionPane.PLAIN_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error al cargar favoritos: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_favoritosActionPerformed

    private void recargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recargarActionPerformed
        // TODO add your handling code here:
        try {
        // Get current window state
        Point location = this.getLocation();
        Dimension size = this.getSize();
        boolean isMaximized = (this.getExtendedState() & JFrame.MAXIMIZED_BOTH) != 0;
        
        // Save current form data
        String currentNombre = nombreDescripcionProductoFINAL.getText();
        String currentCostoFob = costoFOBUSD$_FINAL.getText();
        String currentCostoUSD = CostoUSD$_FINAL.getText();
        String currentCostoQuetzales = costoQuetzales_FINAL.getText();
        String currentPrecioVenta = PrecioVenta_FINAL.getText();
        String currentConIVA = ConIVA_FINAL.getText();
        String currentMargen = margen_FINAL.getText();
        String currentEmail = recibirCorreo.getText();
        
        // Create and configure new window
        SwingUtilities.invokeLater(() -> {
            try {
                // Create new instance
                SolicitudDePedido_mandarCorreo nuevaVentana = new SolicitudDePedido_mandarCorreo(currentUser);
                
                // Restore window state
                if (isMaximized) {
                    nuevaVentana.setExtendedState(JFrame.MAXIMIZED_BOTH);
                } else {
                    nuevaVentana.setLocation(location);
                    nuevaVentana.setSize(size);
                }
                
                // Restore form data using the setDatos method
                // Convert the stored values back to numbers removing currency symbols
                try {
                    double costoFob = Double.parseDouble(currentCostoFob.replace("$", "").replace(",", ""));
                    double costoUSD = Double.parseDouble(currentCostoUSD.replace("$", "").replace(",", ""));
                    double costoQuetzales = Double.parseDouble(currentCostoQuetzales.replace("Q", "").replace(",", ""));
                    double precioVenta = Double.parseDouble(currentPrecioVenta.replace("Q", "").replace(",", ""));
                    double conIVA = Double.parseDouble(currentConIVA.replace("Q", "").replace(",", ""));
                    double margen = Double.parseDouble(currentMargen.replace("%", "")) / 100;
                    
                    nuevaVentana.setDatos(
                        currentNombre,
                        costoFob,
                        costoUSD,
                        costoQuetzales,
                        precioVenta,
                        conIVA,
                        margen
                    );
                } catch (NumberFormatException e) {
                    logAndShowError("Error al procesar los n√∫meros", e);
                }
                
                // Restore email
                nuevaVentana.recibirCorreo.setText(currentEmail);
                
                // Show new window and dispose old one
                nuevaVentana.setVisible(true);
                dispose();
                
            } catch (Exception e) {
                logAndShowError("Error creating new window", e);
            }
        });
        
    } catch (Exception e) {
        logAndShowError("Error reloading window", e);
    }
    }//GEN-LAST:event_recargarActionPerformed

    private void flechaDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flechaDerechaActionPerformed
        // TODO add your handling code here:
            if (NavigationManager.getInstance().canGoForward()) {
        NavigationManager.getInstance().goForward();
        this.dispose(); // Importante: liberar los recursos de la ventana actual
    } else {
        JOptionPane.showMessageDialog(this, 
            "No hay p√°ginas para avanzar", 
            "Informaci√≥n",
            JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_flechaDerechaActionPerformed
    
    
    private void logAndShowError(String message, Exception e) {
    // Log the full stack trace
    System.err.println(message);
    e.printStackTrace();
    
    // Show a user-friendly error message
    SwingUtilities.invokeLater(() -> {
        String errorDetails = e.getMessage() != null ? e.getMessage() : e.getClass().getSimpleName();
        JOptionPane.showMessageDialog(null,
            message + ": " + errorDetails,
            "Error",
            JOptionPane.ERROR_MESSAGE);
    });
}
    
    
    
    // M√©todo auxiliar para crear el panel de cada producto favorito
private JPanel crearPanelProductoFavorito(ProductoFavorito favorito) {
    JPanel panel = new JPanel();
    panel.setLayout(new BorderLayout(8, 8));
    panel.setBorder(BorderFactory.createCompoundBorder(
        BorderFactory.createLineBorder(new Color(180, 180, 180), 1, true),
        BorderFactory.createEmptyBorder(10, 10, 10, 10)
    ));
    panel.setBackground(Color.WHITE); // Fondo blanco limpio

    // Panel de informaci√≥n
    JPanel infoPanel = new JPanel();
    infoPanel.setLayout(new BoxLayout(infoPanel, BoxLayout.Y_AXIS));
    infoPanel.setBackground(Color.WHITE); // Fondo blanco
    infoPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
    
    // Nombre del producto en negrita y verde oscuro
    JLabel nombreLabel = new JLabel(favorito.getNombre());
    nombreLabel.setFont(new Font("SansSerif", Font.BOLD, 13));
    nombreLabel.setForeground(new Color(0, 128, 0)); // Verde oscuro
    infoPanel.add(nombreLabel);
    
    // Costo FOB en gris oscuro
    String detalles = String.format("<html><span style='color:gray;'>Costo FOB:</span> <span style='font-weight:bold;'>$%.2f</span></html>", 
                                    favorito.getCostoFobUSD());
    JLabel detallesLabel = new JLabel(detalles);
    detallesLabel.setBorder(BorderFactory.createEmptyBorder(5, 0, 0, 0));
    detallesLabel.setFont(new Font("SansSerif", Font.PLAIN, 12));
    infoPanel.add(detallesLabel);
    
    panel.add(infoPanel, BorderLayout.CENTER);

    // Panel de botones con dise√±o vertical y compacto
    JPanel botonesPanel = new JPanel();
    botonesPanel.setLayout(new BoxLayout(botonesPanel, BoxLayout.Y_AXIS));
    botonesPanel.setBackground(Color.WHITE); // Fondo blanco
    
    // Bot√≥n de costear en verde suave
    JButton costearButton = new JButton("Costear");
    costearButton.setBackground(new Color(0, 150, 0)); // Verde suave
    costearButton.setForeground(Color.WHITE);
    costearButton.setFont(new Font("SansSerif", Font.PLAIN, 11));
    costearButton.setFocusPainted(false);
    costearButton.setAlignmentX(Component.CENTER_ALIGNMENT);
    costearButton.setMaximumSize(new Dimension(80, 25));
    costearButton.addActionListener(e -> costearProductoFavorito(favorito));
    botonesPanel.add(costearButton);
    botonesPanel.add(Box.createRigidArea(new Dimension(0, 5))); // Espacio entre botones

    // Bot√≥n de eliminar en gris oscuro
    JButton eliminarButton = new JButton("Eliminar");
    eliminarButton.setBackground(new Color(60, 60, 60)); // Gris oscuro
    eliminarButton.setForeground(Color.WHITE);
    eliminarButton.setFont(new Font("SansSerif", Font.PLAIN, 11));
    eliminarButton.setFocusPainted(false);
    eliminarButton.setAlignmentX(Component.CENTER_ALIGNMENT);
    eliminarButton.setMaximumSize(new Dimension(80, 25));
    eliminarButton.addActionListener(e -> eliminarProductoFavorito(favorito));
    botonesPanel.add(eliminarButton);

    panel.add(botonesPanel, BorderLayout.EAST);

    return panel;
}

// M√©todo para costear un producto favorito
private void costearProductoFavorito(ProductoFavorito favorito) {
    SwingUtilities.invokeLater(() -> {
        CosteoForm_Ingresar costeoForm = new CosteoForm_Ingresar(
            currentUser,
            favorito.getNombre(),
            favorito.getCostoFobUSD(),
            0.0, // Flete por defecto
            favorito.getMargen() * 100 // Convertir margen a porcentaje
        );
        costeoForm.setVisible(true);
        this.dispose();
    });
}

// M√©todo para eliminar un producto favorito
private void eliminarProductoFavorito(ProductoFavorito favorito) {
    int confirmacion = JOptionPane.showConfirmDialog(this,
        "¬øEst√°s seguro de que deseas eliminar '" + favorito.getNombre() + "' de tus favoritos?",
        "Confirmar Eliminaci√≥n",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE);
        
    if (confirmacion == JOptionPane.YES_OPTION) {
        try {
            FavoritosManager favoritosManager = new FavoritosManager();
            favoritosManager.eliminarFavorito(favorito, currentUser);
            
            JOptionPane.showMessageDialog(this,
                "Producto eliminado de favoritos exitosamente",
                "√âxito",
                JOptionPane.INFORMATION_MESSAGE);
                
            // Actualizar la vista de favoritos
            bookmarkButton1ActionPerformed(null);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error al eliminar el favorito: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SolicitudDePedido_mandarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SolicitudDePedido_mandarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SolicitudDePedido_mandarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SolicitudDePedido_mandarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SolicitudDePedido_mandarCorreo("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConIVA_FINAL;
    private javax.swing.JTextField CostoUSD$_FINAL;
    private javax.swing.JTextField PrecioVenta_FINAL;
    private javax.swing.JTextField costoFOBUSD$_FINAL;
    private javax.swing.JTextField costoQuetzales_FINAL;
    private javax.swing.JButton enviarCorreo;
    private javax.swing.JButton favoritos;
    private javax.swing.JButton flechaDerecha;
    private javax.swing.JButton flechaIzquierda;
    private javax.swing.JButton guardar_al_historial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField margen_FINAL;
    private javax.swing.JButton menuButton;
    private javax.swing.JButton menuButton1;
    private javax.swing.JTextField nombreDescripcionProductoFINAL;
    private javax.swing.JButton recargar;
    private javax.swing.JTextField recibirCorreo;
    // End of variables declaration//GEN-END:variables

    private void bookmarkButton1ActionPerformed(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
